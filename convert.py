#!/usr/bin/env python3
import sys

with open(sys.argv[1], 'r') as f:
    source_data = f.read()

blocks = source_data.split('\n' * 2)
block_def = blocks[0].split('\n')
block_channels = zip(blocks[1::2], blocks[2::2])

with open(sys.argv[2], 'w') as outf:
    # header
    outf.write("# Auto-generated by soundid-eq-converter\n")
    outf.write("# https://github.com/Jamesits/soundid-eq-converter\n")

    # original comments
    outf.write('\n'.join(["# " + x for x in block_def]))
    outf.write('\n')

    max_gain = 0

    # per-channel settings
    for chan in block_channels:
        metadata = chan[0].split('\n')
        print(metadata)
        name = metadata[0].split(" ")[0]
        delay = float(metadata[1].split(" ")[1])
        gain = float(metadata[2].split(" ")[1])

        freq_map = []
        for line in chan[1].split('\n')[2:]:
            freq = float(line.split(" ")[0][1:])
            fgain = float(line.split("Hz|")[1].split(" ")[0])
            freq_map.append((freq, fgain))
            max_gain = max(max_gain, float(fgain + gain))

        # output channel settings
        eq = "; ".join([f"{x[0]}: {x[1]}" for x in freq_map])
        outf.write(f"Channel: {name}\n")
        outf.write(f"Delay: {delay} ms\n")
        outf.write(f"Preamp: {gain} dB\n")
        outf.write(f"GraphicEQ: {eq}\n")

    # global volume clamp
    print(f"Max gain: {max_gain}")
    outf.write("Channel: All\n")
    outf.write(f"Preamp: {-max_gain} dB\n")
